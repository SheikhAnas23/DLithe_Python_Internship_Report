problem :
Some prime numbers can be expressed as a sum of other consecutive prime numbers. For example
5 = 2 + 3,
17 = 2 + 3 + 5 + 7,
41 = 2 + 3 + 5 + 7 + 11 + 13.
Your task is to find out how many prime numbers which satisfy this property are present in the range 3 to N subject to a constraint that summation should always start with number 2.
Write code to find out the number of prime numbers that satisfy the above-mentioned property in a given range.

Solution:
def isprime(number):
    value = True
    if number > 1:
        for i in range(2, number):
            if (number%i) == 0:
                value = False
                break
        else:
            value = True
    return value

number = int(input())
add = 0
primelist = []
if 2<number<12000000000 and isprime(number) == True:
    san = [int(i) for i in range(2, number) if isprime(i)]
    for i in san:
        if add < number:
            add += i
            if add <= number: primelist.append(i)

if add == number:
    print(number,"= ",end="")
    print(*primelist,sep=" + ")
